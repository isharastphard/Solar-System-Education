/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import {Mesh} from 'three/src/objects/Mesh'
import React, { useRef } from 'react'
import { useFrame } from '@react-three/fiber'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'

type GLTFResult = GLTF & {
  nodes: {
    Cube001: THREE.Mesh
  }
  materials: {
    None: THREE.MeshStandardMaterial
  }
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF("Sun.glb") as GLTFResult
  useFrame(() => { //rotates sun around its axis
    group!.current!.rotation.y += .01;
   })
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh geometry={nodes.Cube001.geometry} material={materials.None} material-color='red' visible position={[0, 0, 0]} rotation={[Math.PI / 2, 0, 0]} scale={2}/>
    </group>
  )
}


